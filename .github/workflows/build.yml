name: Build Go Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows]
        arch: [amd64, arm64]

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Go environment
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    # Step 3: Set up build parameters
    - name: Set environment variables
      run: |
        echo "GOOS=$GOOS"
        echo "GOARCH=$GOARCH"

    # Step 4: Build the binary
    - name: Build the Go application
      run: |
        mkdir -p build
        if [ "${{ matrix.os }}" == "windows" ]; then
          GOOS=windows GOARCH=${{ matrix.arch }} go build -o build/ret3iac.${{ matrix.os }}-${{ matrix.arch }}.exe
        else
          GOOS=linux GOARCH=${{ matrix.arch }} go build -o build/ret3iac.${{ matrix.os }}-${{ matrix.arch }}
        fi

    # Step 5: Upload artifacts (build output)
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ret3iac.${{ matrix.os }}-${{ matrix.arch }}
        path: build/
